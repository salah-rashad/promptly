name: Release


on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version (x.y.z)'
        required: true
      type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    permissions:
        security-events: write
        contents: write      # for creating releases and tags
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
      
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Update version in pubspec.yaml
        run: |
          NEW_VERSION=${{ github.event.inputs.version }}
          sed -i "s/^version: .*/version: $NEW_VERSION/" pubspec.yaml
          
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './pubspec.yaml'
          skip-version-file: true
          skip-git-pull: true
          skip-commit: true
          
      - name: Commit Changes
        run: |
          git add pubspec.yaml CHANGELOG.md
          git commit -m "chore(release): prepare release ${{ github.event.inputs.version }}"
          
      - name: Create Tag
        run: |
          git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
          
      - name: Push Changes
        run: |
          git push
          git push --tags
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
